Authors
========
Soufiane BOUSTIQUE
Samy     FERRAT


NdbCare Package Description
===========================

The purpose of this package is to facilitate the handling and performance of various operations on the database files of the medical software noxturnal.
A noxturnal database file is of the SQLite type and has the following extension: ndb .


Package Module Contents
=======================

annotationToDfNdb
dateNdb
mappingNdb
mergeNdb
readNdb
updateDependenciesNdb
writeNdb

Module Description
==================

annotationToDfNdb : This module contains functions that allow to import annotations from rml or csv file into data frame in the form of a specific table corresponding to the database of a Noxturnal database file.

dateNdb : This module contains the functions that allow to encode and decode the fromat of a usual date in noxturnal format.

mappingNdb : This module contains functions that associate the name of the annotations of an rml file with the noxturnal format.

mergeNdb : This module contains the functions that allow you to merge ndb files. It also contains a function to add annotations (in the form of data frame) to a ndb file.

readNdb : This module contains functions that allow to display information about the database in a synthetic way.

updateDependenciesNdb : This module contains functions that allow you to update the database correctly when merging ndb files.

writeNdb : This module contains functions that allow to initialize an ndb file for an edf file. The module also allows to update information about the patient (for example his id).

NB: nbd stands for noxturnal database.

Clone the project
=================

Run from your terminal:

'git clone https://gitlab.com/mitral.ai/apneal-analytics/-/tree/feature/noxturnal'

Import in nootebook:

'import NdbCare'


Quickstart
==========

1. - Creation of a ndb with an EDF alone 
----------------------------------------

Method 1 /

Step 1 : Import the module writeNdb in you notebook with this command : 'from NdbCare import writeNdb'

Step 2 : Put in your directory (which contains your notebook file) any ndb file.

Step 3 : Run this function : 'writeNdb.GenerateNewNdbForEdf( FileNDB = name_of_your_ndb_file_with_extension , NewName = name_of_your_edf_file_without_extension.ndb)'

Step 4 : Put in a folder your edf file and your ndb file ( they should have the same name ). Then you can start to add annotation or anything you want to the ndb file.

Method 2 /

Take the ndb file from this S3 URI adress : 

2. - Creation of a ndb with an EDF + RML (Alice file)
-----------------------------------------------------

This steps also work if the ndb file already has annotations (import rml in existing ndb file).

Step 1 : Use 1. to create your ndb file for the edf if you don't have one.

Step 2 : Import the modules annotationToDfNdb and mergeNdb in your notebook with this command : 'from NdbCare import annotationToDfNdb' , 'from NdbCare import mergeNdb'

Step 3 : Run this function : annotationToDfNdb.RmlToDfNdb(your_rml_file) then run the output in this function : 'mergeNdb.AddAnnotationToNdb(output,your_ndb_file,name__of_scoring_sheet)', then it's finish, you   can check in noxturnal.

3. - Creation of a ndb with an EDF + CSV (signals + annotations Apneal)
-----------------------------------------------------------------------

This steps also work if the ndb file already has annotations (import csv in existing ndb file).

Step 1 : Use 1. to create your ndb file for the edf if you don't have one.

Step 2 : Import the modules annotationToDfNdb and mergeNdb in your notebook with this command : 'from NdbCare import annotationToDfNdb' , 'from NdbCare import mergeNdb'

Step 3 : Run this function : annotationToDfNdb.CsvToDfNdb(your_csv_file) then run the output in this function : 'mergeNdb.AddAnnotationToNdb(output,your_ndb_file,name__of_scoring_sheet)', then it's finish, you can check in noxturnal.


4. - Merge Ndb files
--------------------

Step 1 : Import the module mergeNdb in you notebook with this command : 'from NdbCare import mergeNdb'

Step 2 : Run this function :  'mergeNdb.MergeDataFiles(name_file,name_file_to_be_modified,name_scorage,name_scorage_to_be_modified)' 

Read the documention for better comprehension (it's very easy !), run this command for help : 'help(mergeNdb.MergeDataFiles)'


5. - Putting in the same scoring sheet several annotations (from differents scorers)
------------------------------------------------------------------------------------

Step 1 : Use 1. to create your ndb file for the edf if you don't have one.

Step 2 : Import the modules annotationToDfNdb and mergeNdb in your notebook with this command : 'from NdbCare import annotationToDfNdb' , 'from NdbCare import mergeNdb'

Step 3 : First we have to change the name of our annotations and their location with this function : 'annotationToDfNdb.takeAndTransformDesiredAnnotationToTableNdb(your_ndb_file,name__of_scoring_sheet)', (for more details run this commend : 'help(annotationToDfNdb.takeAndTransformDesiredAnnotationToTableNdb)' ) . 

Step 4 : Finally we put our new annotations (output of last function) in the scoring sheet ot the ndb file that we want, so run this command : 
         'mergeNdb.AddAnnotationToNdb(output,your_ndb_file,name__of_scoring_sheet)' , hen it's finish, you can check in noxturnal.



